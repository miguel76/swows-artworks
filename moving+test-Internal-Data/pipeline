<components/0>
	<http://www.swows.org/2013/09/pipeline#ID>
		"defaultInput";
	<http://www.swows.org/2013/09/pipeline#Name>
		"Default Input";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#inputdefault>.
<components/1/Out>
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2223223>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Out";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/1>
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/1/Out>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Default Output";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#outputdefault>.
<components/2/diffArtist>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Blue";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2223>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"DiffArtist";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Dot";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2/framing>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Green";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2223222>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Framing";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Rectangle";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2/selected>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Red";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/22232232>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Selected";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Dot";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2222>
	<http://www.swows.org/2013/09/pipeline#ID>
		"SelectedArtwork";
	<http://www.swows.org/2013/09/pipeline#Name>
		"SelectedArtwork";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX fb: <http://rdf.freebase.com/ns/>\n\nCONSTRUCT{\n  <#global> <#selectedArtwork> fb:m.063j6x5.\n}\nWHERE{}";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/2223/areaFilters>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Black";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/222322322>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"AreaFilters";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Rectangle";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2223/selected>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Red";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/22232232>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Selected";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Dot";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/22232/input>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Red";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2223>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Input";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Dot";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2223222>
	<http://www.swows.org/2013/09/pipeline#ID>
		"Framing";
	<http://www.swows.org/2013/09/pipeline#Name>
		"Framing";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX nn:    <http://www.swows.org/xml/no-namespace#>\nPREFIX xml:   <http://www.swows.org/2013/07/xml-dom#>\nPREFIX svg:   <http://www.w3.org/2000/svg#>\nPREFIX xlink: <http://www.w3.org/1999/xlink#>\nPREFIX swi:   <http://www.swows.org/instance#>\n\nPREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX dbpedia: <http://dbpedia.org/resource/>\nPREFIX dbp-ont: <http://dbpedia.org/ontology/>\nPREFIX umbel-sc: <http://umbel.org/umbel/sc/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ff: <http://factforge.net/>\nPREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\n\nPREFIX sparql-res: <http://www.w3.org/2005/sparql-results#>\n\nCONSTRUCT {\n\n  <>\n    <#padding> ?padding;\n    <#smallImagesWidth> ?smallImagesWidth;\n    <#smallImagesHeight> ?smallImagesHeight;\n    <#windowWidth> ?windowWidth;\n    <#windowHeight> ?windowHeight;\n#    <#topBarX> ?topBarX;\n#    <#topBarY> ?topBarY;\n#    <#topBarWidth> ?topBarWidth;\n    <#bottomBarWidth> ?bottomBarWidth;\n    <#leftBarHeight> ?leftBarHeight;\n    <#rightBarHeight> ?rightBarHeight.\n\n  <#svgDoc>\n    a xml:Document ;\n    xml:hasChild <#svgElem> .\n\n  <#svgElem>\n    a svg:svg ;\n    nn:version \"1.1\" ;\n    nn:width ?windowWidth ;\n    nn:height ?windowHeight ;\n    xml:hasChild <#centralImage>, <#infoBox>, <#topBar>, <#bottomBar>, <#leftBar>, <#rightBar>.\n\n  <#centralImage>\n    a svg:image ;\n    nn:x ?centralImageX ;\n    nn:y ?centralImageY ;\n    nn:width ?centralImageWidth ;\n    nn:height ?centralImageHeight .\n\n  <#infoBox> \n    a svg:g;\n    xml:hasChild <#infoBoxName>, <#infoBoxArtist>, <#infoBoxArtForm>, <#infoBoxArtGenre>, <#infoBoxArtSubject>, <#infoBoxDate>.\n\n  <#infoBoxName>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxNameY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#infoBoxArtist>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxArtistY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#infoBoxArtForm>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxArtFormY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#infoBoxArtGenre>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxArtGenreY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#infoBoxArtSubject>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxArtSubjectY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#infoBoxDate>\n    a svg:text ;\n    nn:x ?infoBoxX ;\n    nn:y ?infoBoxDateY ;\n    nn:width ?infoBoxWidth ;\n    nn:height ?infoBoxFieldHeight .\n\n  <#topBar> a svg:g.\n\n  <#topBarArea>\n    a <#ImageArea>;\n    <#svgElement> <#topBar>;\n    <#x> ?topBarX;\n    <#y> ?topBarY;\n    <#width> ?topBarWidth;\n    <#height> ?topBarHeight;\n    <#cols> ?numTopImages;\n    <#rows> 1.\n#    xml:hasChild <#topRect>.\n\n#  <#topRect> \n#    a svg:rect;\n#    nn:x ?topBarX ;\n#    nn:y ?topBarY ;\n#    nn:width ?topBarWidth ;\n#    nn:height ?topBarHeight .\n\n  <#bottomBar> \n    a svg:g;\n    xml:hasChild <#bottomRect>.\n\n  <#bottomRect> \n    a svg:rect;\n    nn:x ?bottomBarX ;\n    nn:y ?bottomBarY ;\n    nn:width ?bottomBarWidth ;\n    nn:height ?bottomBarHeight .\n\n  <#leftBar> \n    a svg:g;\n    xml:hasChild <#leftRect>.\n\n  <#leftRect> \n    a svg:rect;\n    nn:x ?leftBarX ;\n    nn:y ?leftBarY ;\n    nn:width ?leftBarWidth ;\n    nn:height ?leftBarHeight .\n\n  <#rightBar> \n    a svg:g;\n    xml:hasChild <#rightRect>.\n\n  <#rightRect> \n    a svg:rect;\n    nn:x ?rightBarX ;\n    nn:y ?rightBarY ;\n    nn:width ?rightBarWidth ;\n    nn:height ?rightBarHeight .\n\n}\nWHERE {\n  BIND(1000 as ?windowWidth).\n  BIND(600 as ?windowHeight).\n  BIND(10 as ?padding).\n  BIND(100 as ?smallImagesWidth).\n  BIND(100 as ?smallImagesHeight).\n\n  BIND(?smallImagesHeight as ?topBarHeight).\n  BIND(?smallImagesHeight as ?bottomBarHeight).\n  BIND(?smallImagesWidth as ?leftBarWidth).\n  BIND(?smallImagesWidth as ?rightBarWidth).\n\n  BIND(?leftBarWidth+2*?padding AS ?centralPanelX).\n  BIND(?topBarHeight+2*?padding AS ?centralPanelY).\n  BIND(?windowWidth-?leftBarWidth-?rightBarWidth-4*?padding AS ?centralPanelWidth).\n  BIND(?windowHeight-?topBarHeight-?bottomBarHeight-4*?padding AS ?centralPanelHeight).\n\n  BIND(?centralPanelWidth AS ?topBarWidth).\n  BIND(?centralPanelWidth AS ?bottomBarWidth).\n\n  BIND(?centralPanelX AS ?topBarX).\n  BIND(?padding AS ?topBarY).\n  BIND(?centralPanelX AS ?bottomBarX).\n  BIND(?centralPanelY+?centralPanelHeight+?padding AS ?bottomBarY).\n\n  BIND(?windowHeight-2*?padding AS ?leftBarHeight).\n  BIND(?windowHeight-2*?padding AS ?rightBarHeight).\n\n  BIND(?padding AS ?leftBarX).\n  BIND(?padding AS ?leftBarY).\n  BIND(?centralPanelX+?centralPanelWidth+?padding AS ?rightBarX).\n  BIND(?padding AS ?rightBarY).\n\n  BIND(250 as ?infoBoxWidth).\n#  BIND(80 as ?infoBoxHeight).\n  BIND(25 as ?infoBoxFieldHeight).\n\n  BIND(?centralPanelX+?infoBoxWidth AS ?centralImageX).\n  BIND(?centralPanelY AS ?centralImageY).\n  BIND(?centralPanelWidth-?infoBoxWidth AS ?centralImageWidth).\n  BIND(?centralPanelHeight AS ?centralImageHeight).\n\n  BIND(FLOOR((?topBarWidth-?smallImagesWidth)/(?smallImagesWidth+?padding)+1) AS ?numTopImages).\n  BIND(FLOOR((?bottomBarWidth-?smallImagesWidth)/(?smallImagesWidth+?padding)+1) AS ?numBottomImages).\n  BIND(FLOOR((?leftBarHeight-?smallImagesHeight)/(?smallImagesHeight+?padding)+1) AS ?numLeftImages).\n  BIND(FLOOR((?rightBarHeight-?smallImagesHeight)/(?smallImagesHeight+?padding)+1) AS ?numRightImages).\n\n  BIND(?centralPanelX AS ?infoBoxX).\n  BIND(?centralImageY AS ?infoBoxY).\n#  BIND(?centralPanelWidth AS ?infoBoxWidth).\n  BIND(?centralPanelHeight AS ?infoBoxHeight).\n\n  BIND(?infoBoxY+?infoBoxFieldHeight AS ?infoBoxNameY).\n  BIND(?infoBoxY+2*?infoBoxFieldHeight AS ?infoBoxArtistY).\n  BIND(?infoBoxY+3*?infoBoxFieldHeight AS ?infoBoxArtFormY).\n  BIND(?infoBoxY+4*?infoBoxFieldHeight AS ?infoBoxArtGenreY).\n  BIND(?infoBoxY+5*?infoBoxFieldHeight AS ?infoBoxArtSubjectY).\n  BIND(?infoBoxY+6*?infoBoxFieldHeight AS ?infoBoxDateY).\n\n}\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/2223223/Framing>
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2223222>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Framing";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/2223223/View>
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/2>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"View";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/22232232/event>
	<http://www.swows.org/2013/09/pipeline#Color>
		"Red";
	<http://www.swows.org/2013/09/pipeline#ConnectedComponentCode>
		<components/0>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Event";
	<http://www.swows.org/2013/09/pipeline#Shape>
		"Dot";
	<http://www.swows.org/2013/09/pipeline#Type>
		"FROM NAMED".
<components/222322322>
	<http://www.swows.org/2013/09/pipeline#ID>
		"AreaFilters";
	<http://www.swows.org/2013/09/pipeline#Name>
		"AreaFilters";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX nn:    <http://www.swows.org/xml/no-namespace#>\nPREFIX xml:   <http://www.swows.org/2013/07/xml-dom#>\nPREFIX svg:   <http://www.w3.org/2000/svg#>\nPREFIX xlink: <http://www.w3.org/1999/xlink#>\n\nPREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX dbpedia: <http://dbpedia.org/resource/>\nPREFIX dbp-ont: <http://dbpedia.org/ontology/>\nPREFIX umbel-sc: <http://umbel.org/umbel/sc/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ff: <http://factforge.net/>\nPREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\n\nPREFIX sparql-res: <http://www.w3.org/2005/sparql-results#>\n\nCONSTRUCT {\n  <#topBarArea>\n    a <#ImageArea>;\n    <#filter> <#topBarFilter>.\n  <#topBarFilter>\n    <#equalValProp>\n      fb:visual_art.artwork.art_form,\n      fb:visual_art.artwork.art_genre;\n    <#diffValProp>\n      fb:visual_art.artwork.artist;\n    <#orderProps>\n      ().\n}\nWHERE {\n}\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/22232232>
	<http://www.swows.org/2013/09/pipeline#ID>
		"SelArtwork";
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/22232232/event>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"SelArtwork";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX evt:  <http://www.swows.org/2013/07/xml-dom-events#>\nPREFIX fb: <http://rdf.freebase.com/ns/>\n\nINSERT {\n  <#global> <#selectedArtwork> fb:m.063j6x5.\n}\nWHERE {\n  NOT EXISTS {<#global> <#selectedArtwork> ?selected}\n};\n\nDELETE { <#global> <#selectedArtwork> ?oldSelected }\nINSERT { <#global> <#selectedArtwork> ?newSelected }\nWHERE {\n  <#global> <#selectedArtwork> ?oldSelected.\n  GRAPH <#event> {\n    ?event\n      a evt:Event ;\n      evt:type \"click\" ;\n      evt:target ?newSelected .\n  }\n};";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#updatable>.
<components/2223223>
	<http://www.swows.org/2013/09/pipeline#ID>
		"Out";
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/2223223/Framing>,
		<components/2223223/View>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"Out";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#union>.
<components/222322>
	<http://www.swows.org/2013/09/pipeline#ID>
		"SelectTest";
	<http://www.swows.org/2013/09/pipeline#Name>
		"SelectTest";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX fb: <http://rdf.freebase.com/ns/>\n\nSELECT ?x ?y\nWHERE {\n  VALUES (?x ?y) {\n  (3 12)\n  (1 4)\n  (2 8)\n  }\n} ORDER BY ?x\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/22232>
	<http://www.swows.org/2013/09/pipeline#ID>
		"TuplesOutput";
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/22232/input>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"TuplesOutput";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX nn:    <http://www.swows.org/xml/no-namespace#>\nPREFIX xml:   <http://www.swows.org/2013/07/xml-dom#>\nPREFIX svg:   <http://www.w3.org/2000/svg#>\nPREFIX xlink: <http://www.w3.org/1999/xlink#>\nPREFIX swi:   <http://www.swows.org/instance#>\nPREFIX html:  <http://www.w3.org/1999/xhtml#>\n\nPREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX dbpedia: <http://dbpedia.org/resource/>\nPREFIX dbp-ont: <http://dbpedia.org/ontology/>\nPREFIX umbel-sc: <http://umbel.org/umbel/sc/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ff: <http://factforge.net/>\nPREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\n\nCONSTRUCT {\n\n  <#svgDoc>\n    a xml:Document ;\n    xml:hasChild <#htmlElem> .\n\n  <#htmlElem>\n    a html:html ;\n    xml:hasChild <#body> .\n\n  <#body>\n    a html:body ;\n    xml:hasChild <#textArea> .\n\n  <#textArea>\n    a html:textarea ;\n    nn:style \"width: 100%; height:100%\";\n    xml:textContent ?text .\n\n}\nWHERE {\n\n  {\n  SELECT (GROUP_CONCAT(?tripleStr; separator='\n') AS ?triplesStr)\n  WHERE {\n    BIND(STR(<>) AS ?baseStr) .\n    BIND(STRLEN(?baseStr) AS ?baseLen) .\n    GRAPH <#input> {\n      ?s ?p ?o .\n    } .\n    BIND(STR(?s) AS ?sStr).\n    BIND(IF(isBLANK(?s), CONCAT('_:',afn:bnode(?s)), CONCAT('<', IF(SUBSTR(?sStr,0,?baseLen+1)=?baseStr,SUBSTR(?sStr,?baseLen+1),?sStr), '>')) AS ?sOut).\n    BIND(STR(?p) AS ?pStr).\n    BIND(CONCAT('<', IF(SUBSTR(?pStr,0,?baseLen+1)=?baseStr,SUBSTR(?pStr,?baseLen+1),?pStr), '>') AS ?pOut).\n    BIND(STR(?o) AS ?oStr).\n    BIND(IF(isBLANK(?o), CONCAT('_:',afn:bnode(?o)), IF(isIRI(?o), CONCAT('<', IF(SUBSTR(?oStr,0,?baseLen+1)=?baseStr,SUBSTR(?oStr,?baseLen+1),?oStr), '>'), IF(isNumeric(?o), STR(?o), CONCAT('\"', STR(?o), '\"'))) ) AS ?oOut).\n    BIND(CONCAT(?sOut, ' ', ?pOut, ' ', ?oOut, '.') AS ?tripleStr).\n  }\n  }\n \n  BIND(CONCAT('BASE <',STR(<>),'>\n',COALESCE(?triplesStr,'')) AS ?text).\n\n}\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/2223>
	<http://www.swows.org/2013/09/pipeline#ID>
		"DifferentArtist";
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/2223/areaFilters>,
		<components/2223/selected>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"DifferentArtist";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?diffArtistArtwork\nWHERE {\n\n  GRAPH <#selected> {\n    <#global> <#selectedArtwork> ?selectedArtwork.\n\n  GRAPH <#areaFilters> {\n    <#topBarArea>\n      a <#ImageArea>;\n      <#filter> ?filter.\n#    ?filter\n#      <#equalValProp> ?equalValProp;\n#      <#diffValProp> ?diffValProp;\n#      <#orderProps> ?orderProps.\n  \n  {\n  SELECT\n    ?filter\n    (COUNT(DISTINCT ?equalValProp) AS ?equalCount)\n  WHERE {\n    ?filter <#equalValProp> ?equalValProp.\n  } GROUP BY ?filter\n  }\n\n  {\n  SELECT\n    ?filter ?selectedArtwork ?diffArtistArtwork\n    (COUNT(DISTINCT ?equalValProp) AS ?equalCount)\n  WHERE {\n    ?filter <#equalValProp> ?equalValProp.\n\n  SERVICE <http://factforge.net/sparql> {\n    SELECT DISTINCT ?equalValProp ?selectedArtwork ?diffArtistArtwork\n#    SELECT DISTINCT ?diffArtistArtwork\n    WHERE {\n#    ?selectedArtwork\n#      fb:type.object.name ?name ;\n#      fb:visual_art.artwork.artist ?artist ;\n#      fb:visual_art.artwork.date_completed ?date_completed ;\n#      fb:visual_art.artwork.art_form ?art_form ;\n#      fb:visual_art.artwork.art_genre ?art_genre .\n#      fb:visual_art.artwork.art_subject ?art_subject ;\n#      fb:common.topic.description ?mainDescription .\n\n    ?selectedArtwork ?equalValProp ?equalValPropValue.\n\n    ?diffArtistArtwork\n      a fb:visual_art.artwork;\n      fb:common.topic.image/fb:type.content.source ?da_ImageSource;\n      ?equalValProp ?equalValPropValue.\n\n#      fb:visual_art.artwork.artist ?da_artist ;\n#      fb:visual_art.artwork.date_completed ?da_date_completed ;\n#      fb:visual_art.artwork.art_form ?art_form ;\n#      fb:visual_art.artwork.art_genre ?art_genre .\n#      fb:visual_art.artwork.art_subject ?art_subject .\n      \n#    FILTER(?da_artist != ?artist).\n#    FILTER NOT EXISTS {?diffArtistArtwork fb:visual_art.artwork.artist ?artist}.\n    FILTER(?diffArtistArtwork != ?selectedArtwork).\n    FILTER(STRSTARTS(STR(?diffArtistArtwork),STR(fb:m))).\n#      BIND(ABS(xsd:integer(?da_date_completed-?date_completed)) AS ?dateDiff). \n    }\n#    ORDER BY ?dateDiff\n#    LIMIT 5\n    }\n  }\n\n#    FILTER NOT EXISTS {\n#      GRAPH <#areaFilters> {\n#        ?filter <#equalValProp> ?someEqualValProp.\n#      }\n#      SERVICE <http://factforge.net/sparql> {\n#        ?selectedArtwork ?someEqualValProp ?someEqualValPropValue.\n#        FILTER NOT EXISTS {\n#          ?diffArtistArtwork ?someEqualValProp ?someEqualValPropValue\n#        }\n#      }\n#    }.\n\n  #}\n  GROUP BY ?filter ?selectedArtwork ?diffArtistArtwork\n  }\n#  FILTER().\n}\n} \n}\nLIMIT 3\n\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/222>
	<http://www.swows.org/2013/09/pipeline#ID>
		"touches";
	<http://www.swows.org/2013/09/pipeline#Name>
		"touches";
	<http://www.swows.org/2013/09/pipeline#Query>
		"INSERT {\n  ?s ?p ?o .\n}\nWHERE {\n  GRAPH <#touchEvent> {\n    ?s ?p ?o .\n  }\n}";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#updatable>.
<components/22>
	<http://www.swows.org/2013/09/pipeline#ID>
		"Images";
	<http://www.swows.org/2013/09/pipeline#Name>
		"Images";
	<http://www.swows.org/2013/09/pipeline#Query>
		"# Images from artworks of Amedeo Modigliani\nPREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX dbpedia: <http://dbpedia.org/resource/>\nPREFIX dbp-ont: <http://dbpedia.org/ontology/>\nPREFIX umbel-sc: <http://umbel.org/umbel/sc/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ff: <http://factforge.net/>\nPREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\n\nSELECT DISTINCT ?artwork ?image ?uri ?sizeX ?sizeY\nWHERE {\n    dbpedia:Amedeo_Modigliani fb:visual_art.visual_artist.artworks ?artwork .\n    ?artwork fb:common.topic.image ?image .\n    ?image\n\t\tfb:type.content.source ?source ;\n    \tfb:common.image.size ?size .\n    ?source fb:type.content_import.uri ?uri .\n    ?size\n        fb:measurement_unit.rect_size.x ?sizeX ;\n        fb:measurement_unit.rect_size.y ?sizeY .\n  \tBIND(afn:sqrt(20000*?sizeX/?sizeY) AS ?newSizeX) .\n   \tBIND(?newSizeX*?sizeY/?sizeX AS ?newSizeY) .\n\tBIND(?newSizeX*?newSizeY AS ?newSizeTot) .\n}";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.
<components/2>
	<http://www.swows.org/2013/09/pipeline#ID>
		"View";
	<http://www.swows.org/2013/09/pipeline#InputList>
		<components/2/diffArtist>,
		<components/2/framing>,
		<components/2/selected>;
	<http://www.swows.org/2013/09/pipeline#Name>
		"View";
	<http://www.swows.org/2013/09/pipeline#Query>
		"PREFIX nn:    <http://www.swows.org/xml/no-namespace#>\nPREFIX xml:   <http://www.swows.org/2013/07/xml-dom#>\nPREFIX svg:   <http://www.w3.org/2000/svg#>\nPREFIX xlink: <http://www.w3.org/1999/xlink#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nPREFIX fb: <http://rdf.freebase.com/ns/>\nPREFIX dbpedia: <http://dbpedia.org/resource/>\nPREFIX dbp-ont: <http://dbpedia.org/ontology/>\nPREFIX umbel-sc: <http://umbel.org/umbel/sc/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ff: <http://factforge.net/>\nPREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\n\nPREFIX sparql-res: <http://www.w3.org/2005/sparql-results#>\n\nCONSTRUCT {\n\n  <#centralImage> xlink:href ?mainImageURI .\n\n  <#infoBoxName> xml:textContent ?nameStr .\n  <#infoBoxArtist> xml:textContent ?artistStr .\n  <#infoBoxArtForm> xml:textContent ?artFormStr .\n  <#infoBoxArtGenre> xml:textContent ?artGenreStr .\n  <#infoBoxArtSubject> xml:textContent ?artSubjectStr .\n  <#infoBoxDate> xml:textContent ?dateStr .\n\n  <#topBar> xml:hasChild ?daArtwork .\n\n#    xml:listenedEventType \"touchstart\", \"touchmove\", \"touchend\";\n\n\n#  ?topImage\n  ?daArtwork\n    a svg:image ;\n    nn:x ?topBarImageX ;\n    nn:y ?topBarY ;\n    nn:width ?smallImagesWidth ;\n    nn:height ?smallImagesHeight ;\n    xml:listenedEventType \"click\";\n    xlink:href ?daImageIRI .\n    \n\n#  <#bottomBar> \n#  <#leftBar> \n#  <#rightBar> \n\n}\nWHERE {\n  BIND('en' as ?language).\n \n  GRAPH <#framing> {\n    <>\n      <#padding> ?padding;\n      <#smallImagesWidth> ?smallImagesWidth;\n      <#smallImagesHeight> ?smallImagesHeight;\n      <#windowWidth> ?windowWidth;\n      <#windowHeight> ?windowHeight.\n    <#topBarArea>\n      <#x> ?topBarX;\n      <#y> ?topBarY;\n      <#width> ?topBarWidth;\n      <#height> ?topBarHeight.\n  }\n\n  GRAPH <#selected> {\n    <#global> <#selectedArtwork> ?selectedArtwork.\n  }\n\n#  BIND(0 as ?daArtworkIndex).\n\n  GRAPH <#diffArtist> {\n    {\n      SELECT (COUNT(DISTINCT ?result) AS ?daNum)\n      WHERE {\n        ?result a sparql-res:result.\n      }\n    }\n    ?result\n      a sparql-res:result;\n      xml:orderKey ?daArtworkIndexStr;\n      xml:hasChild ?binding.\n    ?binding\n      a sparql-res:binding;\n      xml:hasChild/xml:hasChild/xml:nodeValue ?daArtworkStr.\n  }\n\n  BIND(xsd:integer(?daArtworkIndexStr) AS ?daArtworkIndex).\n  BIND((?topBarWidth-?smallImagesWidth*?daNum)/(?daNum+1) AS ?topBarPadding).\n  BIND(?topBarX+(?daArtworkIndex+1)*?topBarPadding+?daArtworkIndex*?smallImagesWidth AS ?topBarImageX).\n\n  BIND(IRI(?daArtworkStr) AS ?daArtwork) .\n\n  SERVICE <http://factforge.net/sparql> {\n    ?selectedArtwork\n      fb:common.topic.image ?mainImage ;\n      fb:type.object.name ?name ;\n      fb:visual_art.artwork.artist ?artist ;\n      fb:visual_art.artwork.date_completed ?date_completed ;\n      fb:visual_art.artwork.art_form ?art_form ;\n      fb:visual_art.artwork.art_genre ?art_genre .\n    OPTIONAL {\n      ?selectedArtwork fb:visual_art.artwork.art_subject ?art_subject.\n      ?art_subject fb:type.object.name ?artSubjectName.\n      FILTER (lang(?artSubjectName) = ?language).\n    }.\n#      fb:common.topic.description ?mainDescription .\n    ?mainImage\n\tfb:type.content.source ?mainImageSource ;\n    \tfb:common.image.size ?size .\n    ?mainImageSource fb:type.content_import.uri ?mainImageURI .\n    ?size\n        fb:measurement_unit.rect_size.x ?sizeX ;\n        fb:measurement_unit.rect_size.y ?sizeY .\n    ?artist\n      fb:type.object.name ?artistName .\n    ?art_form fb:type.object.name ?artFormName .\n    ?art_genre fb:type.object.name ?artGenreName .\n    \n    FILTER ( lang(?name) = ?language ).\n    FILTER ( lang(?artistName) = ?language ).\n    FILTER ( lang(?artFormName) = ?language ).\n    FILTER ( lang(?artGenreName) = ?language ).\n    \n#    FILTER langMatches( lang(?artistName), ?language ) .\n\n#     ?daArtwork ?p ?o .\n\n#    OPTIONAL {\n      ?daArtwork fb:common.topic.image/fb:type.content.source/fb:type.content_import.uri ?daImageIRI.\n#    }\n\n  }\n\n#  SERVICE <http://factforge.net/sparql> {\n#    OPTIONAL {\n#      ?da_artwork fb:common.topic.image ?da_image .\n#      ?da_image fb:type.content.source ?da_ImageSource.\n#    }\n#  }\n\n  BIND(CONCAT('Name: ',?name) AS ?nameStr).\n  BIND(CONCAT('Artist: ',?artistName) AS ?artistStr).\n  BIND(CONCAT('Form: ',?artFormName) AS ?artFormStr).\n  BIND(CONCAT('Genre: ',?artGenreName) AS ?artGenreStr).\n  BIND(CONCAT('Subject: ',?artSubjectName) AS ?artSubjectStr).\n  BIND(CONCAT('Date: ',?date_completed) AS ?dateStr).\n}\n";
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>
		<http://www.swows.org/2013/09/pipeline#construct>.

